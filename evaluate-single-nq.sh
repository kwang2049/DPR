if python -c "import dpr" &> /dev/null; then
    echo "Have installed DPR"
else
    pip install .
fi

python -m spacy download "en_core_web_sm"

python -m dpr.data.download_data --resource data.retriever.qas.nq-test
python -m dpr.data.download_data --resource checkpoint.retriever.single.nq.bert-base-encoder
python -m dpr.data.download_data --resource data.wikipedia_split.psgs_w100
python -m dpr.data.download_data --resource data.retriever_results.nq.single.wikipedia_passages

export model_file="$PWD/downloads/checkpoint/retriever/single/nq/bert-base-encoder.cp"
export encoded_ctx_files=[\"$PWD/downloads/data/retriever_results/nq/single/wikipedia_passages_*.pkl\"]

python dense_retriever.py \
	model_file=$model_file \
	qa_dataset=nq_test \
	ctx_datatsets=[dpr_wiki] \
	encoded_ctx_files=$encoded_ctx_files \
	out_file='test.json'

# Results:
# [2022-02-27 14:31:41,207][root][INFO] - Validation results: top k documents hits [1658, 2042, 2257, 2377, 2460, 2521, 2577, 2624, 2663, 2695, 2728, 2750, 2773, 2795, 2813, 2830, 2848, 2863, 2876, 2887, 2897, 2907, 2914, 2925, 2941, 2948, 2955, 2959, 2961, 2963, 2967, 2969, 2975, 2979, 2979, 2983, 2985, 2993, 2995, 2999, 3006, 3010, 3015, 3020, 3022, 3024, 3029, 3029, 3029, 3031, 3034, 3039, 3042, 3045, 3045, 3046, 3049, 3052, 3056, 3058, 3061, 3065, 3065, 3067, 3067, 3069, 3069, 3070, 3070, 3070, 3072, 3073, 3074, 3074, 3077, 3079, 3082, 3083, 3086, 3087, 3087, 3090, 3090, 3090, 3090, 3094, 3094, 3095, 3096, 3096, 3097, 3097, 3098, 3098, 3098, 3099, 3100, 3100, 3100, 3100]
# [2022-02-27 14:31:41,208][root][INFO] - Validation results: top k documents hits accuracy [0.4592797783933518, 0.5656509695290859, 0.625207756232687, 0.6584487534626039, 0.6814404432132964, 0.6983379501385042, 0.7138504155124654, 0.7268698060941828, 0.7376731301939058, 0.7465373961218836, 0.7556786703601108, 0.7617728531855956, 0.7681440443213297, 0.7742382271468145, 0.779224376731302, 0.7839335180055401, 0.7889196675900277, 0.7930747922437673, 0.7966759002770083, 0.7997229916897507, 0.8024930747922437, 0.8052631578947368, 0.807202216066482, 0.8102493074792244, 0.8146814404432133, 0.8166204986149584, 0.8185595567867036, 0.8196675900277008, 0.8202216066481994, 0.820775623268698, 0.8218836565096953, 0.8224376731301939, 0.8240997229916898, 0.8252077562326869, 0.8252077562326869, 0.8263157894736842, 0.8268698060941828, 0.8290858725761773, 0.8296398891966759, 0.8307479224376731, 0.8326869806094183, 0.8337950138504155, 0.8351800554016621, 0.8365650969529086, 0.8371191135734072, 0.8376731301939058, 0.8390581717451524, 0.8390581717451524, 0.8390581717451524, 0.839612188365651, 0.8404432132963989, 0.8418282548476455, 0.8426592797783934, 0.8434903047091413, 0.8434903047091413, 0.8437673130193906, 0.8445983379501385, 0.8454293628808864, 0.8465373961218836, 0.8470914127423823, 0.8479224376731302, 0.8490304709141274, 0.8490304709141274, 0.849584487534626, 0.849584487534626, 0.8501385041551247, 0.8501385041551247, 0.850415512465374, 0.850415512465374, 0.850415512465374, 0.8509695290858725, 0.8512465373961219, 0.8515235457063712, 0.8515235457063712, 0.8523545706371192, 0.8529085872576178, 0.8537396121883657, 0.8540166204986149, 0.8548476454293629, 0.8551246537396122, 0.8551246537396122, 0.8559556786703602, 0.8559556786703602, 0.8559556786703602, 0.8559556786703602, 0.8570637119113573, 0.8570637119113573, 0.8573407202216067, 0.8576177285318559, 0.8576177285318559, 0.8578947368421053, 0.8578947368421053, 0.8581717451523546, 0.8581717451523546, 0.8581717451523546, 0.8584487534626039, 0.8587257617728532, 0.8587257617728532, 0.8587257617728532, 0.8587257617728532]